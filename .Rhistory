fileURL <- "https://data.baltomorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL, destfile = "./data/cameras.csv", method = "curl")
install.packages("RMySQL")
library("RMySQL")
install.packages("RMySQL")
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
library("RMySQL")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library("RMySQL")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
swirl()
library(swirl)
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child~1, galton)
view(trees)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
tree2 <- eliminate("Girth", trees)
trees2 <- eliminate("Girth", trees)
head(tree2)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
swirl()
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ .+ec, swiss)
fit$coefficients - efit$coefficients
all$coefficients-efit$coefficients
swirl()
View(InsectSprays)
table(InsectSprays$spray)
6
swirl()
6
dim(InsectSprays)
head(InsectSprays, 15)
sA
sA[, 2]
nrow(sA)
summary(InsectSprays[, 2])
sapply(X = InsectSprays, )
sapply(X = InsectSprays, names )
sapply(InsectSprays,class)
fit <- lm(spray ~ count, InsectSprays)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[, 1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, spray2)
spray2
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3])/1.6011
dim(hunger)
943
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmf <- lm(Numeric ~ Year, subset(hunger, hunger$Sex == "Female"))
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
names(mtcars)
fit <- lm(mpg ~ cyl + wt, mtcars)
summary(fit)
summary(fit)$coef
summary(fit)$coef[1, 2]
summary(fit)$coef[2, 1]
4 * summary(fit)$coef[2, 1]
library(swirl)
swirl()
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility~., swiss)
vif(mdl)
mdl <- lm(Fertility~. - Examination, swiss)
mdl2 <- lm(Fertility~. - Examination, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility~Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1) - deviance(fit3))/(df.residual(fit1) - df.residual(fit3))
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
swirl()
View(ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family = binomial, data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore = c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(object = mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
?mtcars
data(mtcars)
automatic <- subset(mtcars, mtcars$am ==  0)
manual <- subset(mtcars, mtcars$am == 1)
test <- t.test(automatic$mpg, manual$mpg)
test
test$statistic
test$p.value
test$conf.int
test$estimate
test$method
test$null.value
plot(automatic)
plot(automatic$mpg)
hist(automatic$mpg)
summary(lm(mpg ~ factor(am), mtcars))$coeff
summary(lm(mpg ~ factor(am) - 1, mtcars))$coeff
lm(formula = Fertility ~ . + z, data = swiss)
z <- swiss$Agriculture + swiss$Education
lm(Fertility ~ . + z, data = swiss)
summary(lm(Fertility ~ . + z, data = swiss))
boxplot(x = mtcars$mpg, col = red)
boxplot(x = mtcars$mpg, col = "red")
boxplot(formula = mpg ~ factor(am) , data =  mtcars, col = "red")
boxplot(formula = mpg ~ factor(am) , data =  mtcars, col = "red", names = c("Automatic", "Manual"))
boxplot(formula = mpg ~ factor(am) , data =  mtcars, col = "red", names = c("Automatic", "Manual"), outline = TRUE)
boxplot(formula = mpg ~ factor(am) , data =  mtcars, col = "lightblue", names = c("Automatic", "Manual"), outline = TRUE, main = " Compare the automatic and manual transmission over mpg ", xlab = "Transmission", ylab = "Miles/(US) gallon")
fit <- lm(mpg ~ factor(am), mtcars)
library(MASS)
fit <- lm(mpg ~., data = mtcars)
step <- stepAIC(fit, direction = "both")
step$anova
step <- stepAIC(fit, direction = "backward")
step$anova
fit1 <- lm(mpg ~ wt + qsec + factor(am), mtcars)
deviance(fit1)
summary(fit1)
fit2 <- lm(mpg ~ factor(am), mtcars)
deviance(fit2)
summary(fit1)
t.test(fit1)
t.test(mpg ~ factor(am), mtcars)
t.test(mpg ~ factor(am), mtcars,alternative = "greater")
residuals(fit)
fitted(fit)
fit1 <- lm(mpg ~ wt + qsec + am, mtcars)
summary(fit1)
summary(lm(mpg ~ wt + qsec + factor(am), mtcars))
library(MASS); step <- stepAIC(lm(mpg ~., mtcars), direction = "both")
names(step)
step$model
fit$coefficients[2]
fit1$coefficients[2]
fit1 <- lm( mpg ~ factor(am) + wt + qsec, mtcars)
summary(fit1)
library(lubridate)
bw.tel <- read.csv("bwTel.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
bw.tel.newPol <- subset(bw.tel, bw.tel$Transact == "NEWP")
bw.tel.renwal <- subset(bw.tel, bw.tel$Transact == "RNWP")
bw.tel.rebrok <- subset(bw.tel, bw.tel$Transact == "RBRP")
table(duplicated(bw.tel$Client.Cde))
table(duplicated(bw.tel.newPol$Client.Cde))
bw.tel <- subset(bw.tel, bw.tel$Post.Date >= as.Date("2014-01-01") & bw.tel$Post.Date <= as.Date("2014-12-31"))
bw.tel <- read.csv("bwTel.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
bw.tel$Post.Date >= as.Date("2014-01-01")
table(bw.tel$Post.Date >= as.Date("2014-01-01"))
table(as.Date(bw.tel$Post.Date, %d/%m/%y) >= as.Date("2014-01-01"))
as.Date(bw.tel$Post.Date, %d-/%m-/%y) >= as.Date("2014-01-01")
table(as.Date(bw.tel$Post.Date, %d-%m-%y) >= as.Date("2014-01-01"))
table(as.Date(bw.tel$Post.Date, %d/%m/%Y) >= as.Date("2014-01-01"))
mdy(bw.tel$Post.Date)
mdy?
a
?mdy
head(dmy(bw.tel$Post.Date))
table(dmy(bw.tel$Post.Date) >= as.Date("2014-01-01"))
table(dmy(bw.tel$Post.Date) >= ymd("2014-01-01"))
bw.tel <- subset(bw.tel, dmy(bw.tel$Post.Date) >= ymd("2014-01-01") & dmy(bw.tel$Post.Date) <= ymd("2014-12-31"))
bw.tel <- subset(bw.tel, bw.tel$X == "")
bw.tel.newPol <- subset(bw.tel, bw.tel$Transact == "NEWP")
bw.tel.renwal <- subset(bw.tel, bw.tel$Transact == "RNWP")
bw.tel.rebrok <- subset(bw.tel, bw.tel$Transact == "RBRP")
table(duplicated(bw.tel.newPol$Client.Cde))
bw.tel.newPol <- subset(bw.tel.newPol, duplicated(bw.tel.newPol$Client.Cde) == FALSE)
bw.tel.renwal <- subset(bw.tel.renwal, duplicated(bw.tel.renwal$Client.Cde) == FALSE)
bw.tel.rebrok <- subset(bw.tel.rebrok, duplicated(bw.tel.rebrok$Client.Cde) == FALSE)
bw.tel.newPol$month <- month(bw.tel.newPol$Post.Date)
bw.tel.renwal$month <- month(bw.tel.renwal$Post.Date)
bw.tel.rebrok$month <- month(bw.tel.rebrok$Post.Date)
table(bw.tel.newPol$month)
table(bw.tel.renwal$month)
table(bw.tel.rebrok$month)
bw.tel <- read.csv("bwTel.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
bw.tel.rn2015 <- subset(bw.tel, dmy(bw.tel$Effective.Date) >= ymd("2014-01-01")
& dmy(bw.tel$Effective.Date) <= ymd("2014-12-31") )
bw.tel.rn2015 <- subset(bw.tel.rn2015$X == "")
bw.tel.rn2015 <- subset(bw.tel.rn2015, bw.tel.rn2015$X == "")
bw.tel.rn2015 <- subset(bw.tel.rn2015, bw.tel.rn2015$Transact == "RNWP"
|bw.tel.rn2015$Transact == "NEWP"
|bw.tel.rn2015$Transact == "RBRP")
bw.tel.rn2015 <- subset(bw.tel.rn2015, duplicated(bw.tel.rn2015$Client.Cde) == FALSE)
bw.tel.rn2015$month <- month(bw.tel.rn2015$Effective.Date)
table(bw.tel.rn2015$month)
bw <- read.csv("bw2014.csv.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
bw <- read.csv("bw2014.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
bw <- subset(bw, bw$X == "")
bw.newPol <- subset(bw, bw$Transact == "NEWP")
bw.renwal <- subset(bw, bw$Transact == "RNWP")
bw.rebrok <- subset(bw, bw$Transact == "RBRP")
bw.newPol <- subset(bw.newPol, duplicated(bw.newPol$Client.Cde) == FALSE)
bw.renwal <- subset(bw.renwal, duplicated(bw.renwal$Client.Cde) == FALSE)
bw.rebrok <- subset(bw.rebrok, duplicated(bw.rebrok$Client.Cde) == FALSE)
bw.newPol$month <- month(bw.newPol$Post.Date)
bw.renwal$month <- month(bw.renwal$Post.Date)
bw.rebrok$month <- month(bw.rebrok$Post.Date)
table(bw.newPol$month)
table(bw.renwal$month)
table(bw.rebrok$month)
bw <- read.csv("bw2014.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE)
bw.newPol <- subset(bw, bw$Transact == "NEWP")
bw.renwal <- subset(bw, bw$Transact == "RNWP")
bw.rebrok <- subset(bw, bw$Transact == "RBRP")
bw.newPol <- subset(bw.newPol, duplicated(bw.newPol$Client.Cde) == FALSE)
bw.renwal <- subset(bw.renwal, duplicated(bw.renwal$Client.Cde) == FALSE)
bw.rebrok <- subset(bw.rebrok, duplicated(bw.rebrok$Client.Cde) == FALSE)
bw.newPol$month <- month(bw.newPol$Post.Date)
bw.renwal$month <- month(bw.renwal$Post.Date)
bw.rebrok$month <- month(bw.rebrok$Post.Date)
table(bw.newPol$month)
table(bw.renwal$month)
table(bw.rebrok$month)
tail(bw$Post.Date)
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
swirl()
main()
swirl()
setwd("C:/Users/duy.bui/OneDrive/Courses/Developing Data Products/Project/Assignment1")
library(shiny)
install.packages("shiny")
shinyUI(
)
runApp()
library(shiny)
runApp()
install.packages("caret")
library(caret)
runApp()
adultData <- read.table("adult.data", header = FALSE, sep = ",", strip.white = TRUE)
adultName <- read.csv("adult.name.csv", header = FALSE, sep = ",", stringsAsFactors = FALSE)
names(adultData) <- adultName[, 1]
#Only select several attributes
selected <- c("age", "education", "marital.status", "relationship", "sex", "hours.per.week", "salary")
#selected <- c("age", "hours.per.week", "salary")
adultData <- subset(adultData, select = selected)
adultName <- read.csv("adult.name.csv", header = FALSE, sep = ",", stringsAsFactors = FALSE)
adultName <- read.csv("adult.name.csv", header = FALSE, sep = ",", stringsAsFactors = FALSE)
names(adultData) <- adultName[, 1]
runApp()
install.packages("e1071")
runApp()
runApp()
runApp()
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
deployApp()
deployApp()
deployApp()
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
install_github('slidify', 'ramnathv')
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
setwd("C:/Users/duy.bui/OneDrive/Courses/Developing Data Products/Project/Assignment2")
author("Duy Bui")
slidify("index.Rmd")
slidify("index.Rmd")
